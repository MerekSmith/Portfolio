[
  {
    "title": "Devconnector Social Network",
    "description": "This is a full stack MERN app which is meant to be a social network for developers. It includes token authentication for logins, Redux for state management, and allows users to create a profile, add credientials, and post comments.",
    "technologies": "React, Redux, Mongodb, Mongoose, Express, Node, Bootstrap, React-Router, classnames.",
    "link": "https://devconnector-mernstack.herokuapp.com/",
    "github": "https://github.com/MerekSmith/devconnector-mernstack",
    "type": "Online Course",
    "image": "./assets/projects/devconnector.jpg"
  },
  {
    "title": "Emaily",
    "description": "This is a full stack MERN app which allows users to send out surveys to mutiple clients requesting feedback. The users pay for credits using Stripe and the email service utilizes SendGrid. When clients respond to their emails, the user can see the responses on their survey dashboard. This app uses GoogleAuth for logging in.",
    "technologies": "React, Redux, Mongodb, Mongoose, Express, Node, Bootstrap, React-Router, GoogleAuth, Stripe, SendGrid.",
    "link": "https://blooming-ravine-37747.herokuapp.com/",
    "github": "https://github.com/MerekSmith/Emaily",
    "type": "Online Course",
    "image": "./assets/projects/emaily.jpg"
  },
  {
    "title": "Trivia Game",
    "description": "This is a fun, trivia game. It is connected to a public trivia API that allows for several choices to be made such as difficulty and topic. The game also includes timers that help move that game forward.",
    "technologies": "HTML, CSS, Timers, and an API",
    "link": "https://mereksmith.github.io/TriviaGame/",
    "github": "https://github.com/MerekSmith/TriviaGame",
    "type": "School",
    "image": "./assets/projects/trivia_game.jpg"
  },
  {
    "title": "Hangman Game",
    "description": "This is a simple Hangman game made in React. It was made for my daughter so the current 1 Player word list is designed for a 5-6 year old. It also has a 2 player option where the users can enter in their own words. It has some additional checks to make sure there are no duplicate words or the user hits the same letter or non-letter key.",
    "technologies": "React.",
    "link": "https://hangman-game-react.herokuapp.com/",
    "github": "https://github.com/MerekSmith/Hangman-React",
    "type": "Personal",
    "image": "./assets/projects/hangman_game.png"
  },
  {
    "title": "The Simpsons Memory Game",
    "description": "This is a fun, memory game where you try to select a different character each time without selecting a duplicate. This was created using a JSON file that contains 54 Simpsons characters that are randomly selected each time. The game keeps track of the high score during each session.",
    "technologies": "React.",
    "link": "https://pacific-ravine-66628.herokuapp.com/",
    "github": "https://github.com/MerekSmith/Simpsons-Memory-Game",
    "type": "School",
    "image": "./assets/projects/simpsons_memory_game.png"
  },
  {
    "title": "Client Panel",
    "description": "This is a simple client manager app where a user can input in a client and keep track of a balance owed. This is a CRUD app which uses React as the framework for a SPA and Firebase as the database. It also uses Firebase authentication. To test the site, you can use the username: tester@tester.com and password: tester. You are also able to register your own user account.",
    "technologies": "React, Redux, Firebase, Bootstrap, classnames.",
    "link": "https://reactclientpanel-dee1c.firebaseapp.com/register/",
    "github": "https://github.com/MerekSmith/clientpanel-react",
    "type": "Online Course",
    "image": "./assets/projects/clientpanel.png"
  },
  {
    "title": "New York Times Article API",
    "description": "This site uses the New York Times API to pull articles based on provided search criteria. You can then save the article to the database and add a note. Each time an article is saved, socket.io is used to alert other users that a new article is in the saved articles section. There is also a bonus countdown timer that is just a demonstration of socket.io. The timer will be the same for every user on the site and continues to reset after 30 seconds.",
    "technologies": "React, MongoDB, Mongoose, Node, Express, and socket.io.",
    "link": "https://gentle-garden-91780.herokuapp.com/",
    "github": "https://github.com/MerekSmith/nytReactSocket",
    "type": "School",
    "image": "./assets/projects/nyt_articles.png"
  },
  {
    "title": "Chat App",
    "description": "This site uses the New York Times API to pull articles based on provided search criteria. You can then save the article to the database and add a note. Each time an article is saved, socket.io is used to alert other users that a new article is in the saved articles section. There is also a bonus countdown timer that is just a demonstration of socket.io. The timer will be the same for every user on the site and continues to reset after 30 seconds.",
    "technologies": "React, Node, Express, and socket.io.",
    "link": "https://stark-headland-42028.herokuapp.com/",
    "github": "https://github.com/MerekSmith/ChatApp",
    "type": "Online Course",
    "image": "./assets/projects/chatapp.jpg"
  },
  {
    "title": "Avengers Fighting Game",
    "description": "This is fighting game with an Avengers theme. It has over 15 characters available but each game is randomized by which characters are available and their stats. You must pick wisely in order to defeat them all before you run out of hp. This uses jQuery to dynammically add or update elements.",
    "technologies": "jQuery, Bootstrap.",
    "link": "https://mereksmith.github.io/Avengers-Game/",
    "github": "https://github.com/MerekSmith/Avengers-Game",
    "type": "School",
    "image": "./assets/projects/avengers_game.jpg"
  },
  {
    "title": "Barcode (Project 2)",
    "description": "This was my 2nd team project that was designed to be a web based inventory management system. It can allow an employee to enter in new items easily and allows consumers to instantly see an item that is now available for sale.",
    "technologies": "Handlebars, SQL Server, Node, and Express, jQuery, Datatable.",
    "link": "https://barcode-inventory.herokuapp.com/item",
    "github": "https://github.com/MerekSmith/BarcodeInventory",
    "type": "School",
    "image": "./assets/projects/barcode-scanner.jpg"
  },
  {
    "title": "Price It (Project 1)",
    "description": "This was my first team project and was created as a tool to find the lowest price on an item. This was connected to three APIs including Amazon, Walmart, and eBay. The Amazon API was the most challenging to set up, which I completed.",
    "technologies": "HTML, CSS, and API connections.",
    "link": "https://mereksmith.github.io/PriceIt/",
    "github": "https://github.com/MerekSmith/PriceIt",
    "type": "School",
    "image": "./assets/projects/PriceItLogo.png"
  },
  {
    "title": "Rock Paper Scissors Multiplayer",
    "description": "This is a multiplayer game of Rock, Paper, Scissors using Firebase as the database and server for multiple user connections. 2 players can join into the game and play along while chatting together using the chat box.",
    "technologies": "HTML, CSS, and Firebase.",
    "link": "https://mereksmith.github.io/RPS-Multiplayer/",
    "github": "https://github.com/MerekSmith/RPS-Multiplayer",
    "type": "School",
    "image": "./assets/projects/rps_game.png"
  },
  {
    "title": "The Colony (Project 3)",
    "description": "This was my third team project. It is meant to be a game similiar to Jackbox and One Night Ultimate Wearwolf. The site is meant to act as the motirator for the game and would allow people to connect using their phones. Timers would be used to move the game along and allow players to vote and perform actions. The website was not get completed and does not really function. It will allow players to connect via socket.io but the game does not play.",
    "technologies": "React, Redux, Socket.io, MongoDB, Mongoose, Express, and Node.",
    "link": "https://voyage-mandarine-71760.herokuapp.com/",
    "github": "https://github.com/MerekSmith/The-Colony",
    "type": "School",
    "image": "./assets/projects/colony.JPG"
  },
  {
    "title": "Giphy API!",
    "description": "This site connects to a Giphy API and allows users to populate the page with 10 gif images that can be paused and played when clicked. It starts with some generic buttons but users can type in anything they would like to search for, create a new button, then click on it to see their gif results. This also uses local storage to save buttons that the user has created but are unique to that computer. This is just some plain, dumb, time-wasting fun!",
    "technologies": "HTML, CSS, Bootstrap, API, and Local Storage.",
    "link": "https://mereksmith.github.io/GiphyAPI/",
    "github": "https://github.com/MerekSmith/GiphyAPI",
    "type": "School",
    "image": "./assets/projects/giphy.gif"
  },
  {
    "title": "Eat da Burger!",
    "description": "This site simply allows users to create a burger then click on it to either eat it or remake it. As the user does this it moves the burger name to the Devoured section to the To-Be Devoured section.",
    "technologies": "HTML, CSS, Javascript, SQL Server.",
    "link": "https://pacific-everglades-50512.herokuapp.com/",
    "github": "https://github.com/MerekSmith/burger",
    "type": "School",
    "image": "./assets/projects/eatdaburger.JPG"
  },
  {
    "title": "The Psychic Game",
    "description": "This simple game has you type in a letter from the keyboard to try and match a randomly picked letter from the computer. You have 9 chances to make a correct guess. The game will tell you if you got it right, wrong, or if you selected a letter already used. If you don't guess correctly, it will tell you what the letter was and then reset with a new random letter.",
    "technologies": "HTML, jQuery.",
    "link": "https://mereksmith.github.io/Psychic-Game/",
    "github": "https://github.com/MerekSmith/Psychic-Game",
    "type": "School",
    "image": "./assets/projects/pyschic_game.JPG"
  },
  {
    "title": "Constructor Hangman (Node)",
    "description": "A hangman game made using constructors and node.js. This only runs in Node on a command prompt window. There are some color coding that helps prompt the user when the letter is correct or incorrect along with how many guesses remain.",
    "technologies": "Node.js, jQuery.",
    "link": "https://github.com/MerekSmith/Constructor_Hangman",
    "github": "https://github.com/MerekSmith/Constructor_Hangman",
    "type": "School",
    "image": "./assets/projects/constuctor_hangman.jpg"
  },
  {
    "title": "DigitalPal (Node)",
    "description": "This is a tamagotchi type app where you can make choices of how to take care of a digital pet. It is only played through Node and a command prompt window.",
    "technologies": "Javascript, Inquirer, Node.js.",
    "link": "https://github.com/MerekSmith/DigitalPal",
    "github": "https://github.com/MerekSmith/DigitalPal",
    "type": "School",
    "image": "./assets/projects/digitalpal.jpg"
  }
]
